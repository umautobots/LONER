# This is mainly used for testing purposes and to show structure
# - but should be overwritten  at runtime by reading data logs,
# camera info messages, etc.
calibration:
  lidar_to_camera:
    xyz: [0,0,0]
    orientation: [0,0,0,1] 
  camera_intrinsic:
    k: NULL
    distortion: NULL
    new_k: NULL
    width: NULL
    height: NULL

debug:
  global_enabled: True
  flags:
    pytorch_detect_anomaly: False
    draw_comp_graph: False
    write_ray_point_clouds: False
    write_frame_point_clouds: False
    write_icp_point_clouds: False
    profile_optimizer: False
    use_groundtruth_poses: False
    draw_loss_distribution: False
    log_losses: True
    profile: False

system:
  single_threaded: True
  log_dir_prefix: "~/ClonerSLAM/outputs"

# ros_names:
#   camera: "ego_vehicle/rgb_front"
#   lidar: "ego_vehicle/lidar"
#   camera_suffix: "image"
#   topic_prefix: "/carla"
ros_names:
  camera: "stereo/frame_left"
  lidar: "os_cloud_node/points"
  camera_suffix: "image_raw"
  topic_prefix: "" 
# ros_names:
#   camera: "ego_vehicle/camera/rgb"
#   lidar: "ego_vehicle/lidar/center"
#   camera_suffix: "image"
#   topic_prefix: "/carla"

tracker:
  frame_synthesis:
    strategy: NULL
    sky_removal: NULL
    frame_decimation_rate_hz: 10
    eps_t_over_delta_t: 0.5 # epsilon_t = <this number> * (1/frame_decimation_rate_hz). Maximum/Default 0.5.
    use_simple_frames: True
    split_lidar_scans: False
    frame_match_tolerance: 0.01
    lidar_point_step: 10 # Only keep 1 out of this many lidar points
  icp:
    threshold: 0.25
    max_iterations: 10
    relative_fitness: 1.e-8
    relative_rmse: 1.e-8
    downsample:
      type: UNIFORM
      target_uniform_point_count: 10000
      voxel_downsample_size: 0.1
  motion_compensation:
    enabled: True
    use_gpu: True
mapper:
  device: 0 # don't change this, use CUDA_VISIBLE_DEVICES
  data_prep_on_cpu: &data_prep_on_cpu True
  log_verbose: False
  keyframe_manager:
    keyframe_selection:
      strategy: TEMPORAL
      temporal:
        time_diff_seconds: 2
    window_selection:
      strategy: HYBRID
      hybrid_settings:
        num_recent_frames: 5
      window_size: 10
    sample_allocation:
      strategy: UNIFORM

      # How many samples to take uniformly across non-sky regions. 
      # Remember 2 images per frame, so this is doubled.
      num_rgb_uniform_samples: 256
      
      # How many to use strategy to choose. This is an average since it may vary by image. 
      avg_rgb_strategy_samples: 256

      # Same, for lidar
      num_lidar_uniform_samples: 512
      avg_lidar_strategy_samples: 0
      
      num_keyframes_to_keep: 10

  optimizer:
    data_prep_on_cpu: *data_prep_on_cpu
    k_test: 0
    enabled: True
    default_optimizer_settings:
      stage: 1
      num_iterations: 5
      fix_poses: False
      fix_sigma_mlp: False
      fix_rgb_mlp: False
    detach_rgb_from_poses: True
    skip_pose_refinement: True # If set, skips the tracking refinement part of the optimization
    keyframe_schedule:
      - 
        num_keyframes: 1
        iteration_schedule:
          - num_iterations: 1000
            stage: 3
            fix_poses: True
            fix_sigma_mlp: False
            fix_rgb_mlp: False
      -
        num_keyframes: -1
        iteration_schedule:
          # First refine the tracking (skipped by default)
          - stage: 1
            num_iterations: 50
            fix_poses: False
            latest_kf_only: True
            fix_sigma_mlp: True
            fix_rgb_mlp: True
          # Now joint optimization
          - stage: 3
            num_iterations: 150
            fix_poses: False
            fix_sigma_mlp: False
            fix_rgb_mlp: False

    model_config: !include model_config/decoupled_carla_halfres.yaml
  
