seed: 8

data:
    ray_range: &ray_range [1, 100]

model:
    num_colors: 3            # number of output colors

    model_type: "nerf_decoupled"
    nerf_config: !include "../nerf_config/carla_decoupled_hash.yaml"
    ray_range: *ray_range

    render:
        N_samples_train: 512          # number of samples per ray
        N_samples_test: 2048      # number of samples per ray during testing
        retraw: True
        lindisp: False          # sampling linearly in disparity rather than depth
        perturb: 1.             # set to 0. for no jitter, 1. for jitter
        white_bkgd: False
        raw_noise_std: 1.       # std dev of noise added to regularize sigma_a output, 1e0 recommended
        chunk: 16384            # number of rays processed in parallel, decrease if running out of memory
        netchunk: 0             # number of pts sent through network in parallel, decrease if running out of memory. If 0, process all pts together

    # Set occ_model to -1 to use uniform ray sampler
    occ_model:
        voxel_size: 100
        lr: 0.0001
        N_iters_acc: 10    # number of iters to accumulate gradients before stepping optimizer

train:
    lrate_mlp: 0.1             # learning rate
    lrate_pose: 0.005
    lrate_gamma: 0.95
    decay_rate: 0.001
     
loss:
    dynamic_depth_eps_JS: True         # boolean to enable JS divergence loss
    JS_loss:
        min_js_score: 1.
        max_js_score: 10.
        alpha: 5
    viz_loss: False                     # boolean to enable loss visualization

    decay_depth_lambda: False          # boolean to enable decay
    depth_lambda: 1000.                # Depth lambda used for loss.
    min_depth_lambda: 10.              # Minimum value after decay
    depth_lambda_decay_steps: 15000
        
    decay_depth_eps: True              # boolean to enable decay
    depth_eps: 3.0                     # starting tolerance for line of sight loss in euclidean space
    min_depth_eps: 0.3                 # Minimum value after decay
    depth_eps_decay_steps: 500

    term_lambda: 0.0      # weight for lidar termination depth
    cam_lambda: 1       # weight for camera intensity value
    std_lambda: 0.0       # weight for standard deviation loss on camera rays

